LIBNAME   IVR "/sas_env/datamart/cco/IVR_BPR/status/Sep_p2";       
libname  function   "/sas_env/datamart/cco/IVR_SAS_DATASETS/2013/FUNCTION";       
libname  HEADER   "/sas_env/datamart/cco/IVR_SAS_DATASETS/2013/HEADER";        
libname  STATE   "/sas_env/datamart/cco/IVR_SAS_DATASETS/2013/STATE";
              
/*=========================================STATE   TAB=======================================================*/
                          
%MACRO   IVR_STATUS_BPR(DATE);        
%DO   I=10 %TO &DATE;        
%DO   M = 9 %TO 9;        
%DO   A = 1 %TO 2;                    

DATA   IVR.SAMPLE_STATE;       
SET   STATE.STATE_APP&A._2012_0&m._&i.;        
RUN;
                
DATA   IVR.SAMPLE_FUNCTION;        
SET   FUNCTION.FUNCTION_APP&A._2012_0&m._&i.;        
RUN;
                      
PROC   SQL;        
CREATE   TABLE IVR.SAMPLE AS        
SELECT   A.*, B.TIME_STAMP        
FROM   IVR.SAMPLE_FUNCTION AS A         
INNER   JOIN         
IVR.SAMPLE_STATE  AS B        
ON   A.CALL_ID = B.CALL_ID        
AND   A.STATE_KEY = B.STATE_KEY        
ORDER   BY CALL_ID, STATE_KEY;        
QUIT;
                      
DATA   IVR.SAMPLE_APP&A._2013_0&m._&i.;        
IF   _N_ = 1 THEN         
 DO;          
  SESSION_KEY = 0;        
  END;                
RETAIN   STATE_ID OLD_STATE_ID SESSION_KEY ;
        
FORMAT   OLD_STATE_ID $4.;        
FORMAT   DOUBLE_LAG $4.;        
SESSION   = SESSION_KEY;        
DOUBLE_LAG   = OLD_STATE_ID;        
OLD_STATE_ID   = STATE_ID;              
SET   IVR.SAMPLE;       
BY   CALL_ID STATE_KEY;
        
/*TRANSACTION   INITIATION*/
       
IF               
(   SUBSTR(STRIP(STATE_ID),1,4) = '1125' AND SUBSTR(STRIP(OLD_STATE_ID),1,4) =   '1114') OR
        
   ( SUBSTR(STRIP(STATE_ID),1,4) = '1125' AND   SUBSTR(STRIP(OLD_STATE_ID),1,4) = '1120') OR
        
   ( SUBSTR(STRIP(STATE_ID),1,4) = '1125' AND   SUBSTR(STRIP(OLD_STATE_ID),1,4) = '1127') OR 
        
   ( SUBSTR(STRIP(STATE_ID),1,4) = '1130' AND   SUBSTR(STRIP(OLD_STATE_ID),1,4) = '1127') OR 
        
   ( SUBSTR(STRIP(STATE_ID),1,4) = '1125' AND   SUBSTR(STRIP(OLD_STATE_ID),1,4) = '1137') OR 
        
   ( SUBSTR(STRIP(STATE_ID),1,4) = '1130' AND   SUBSTR(STRIP(OLD_STATE_ID),1,4) = '1137') OR 
        
   ( SUBSTR(STRIP(STATE_ID),1,4) = '1120' AND   SUBSTR(STRIP(OLD_STATE_ID),1,4) = '1137') OR 
        
   ( SUBSTR(STRIP(STATE_ID),1,4) = '1125' AND   SUBSTR(STRIP(OLD_STATE_ID),1,4) = '1132') OR
        
   ( SUBSTR(STRIP(STATE_ID),1,4) = '1140' AND   SUBSTR(STRIP(OLD_STATE_ID),1,4) = '1112') OR
        
   ( SUBSTR(STRIP(STATE_ID),1,4) = '1135' AND   SUBSTR(STRIP(OLD_STATE_ID),1,4) = '1130') OR 
          
(   SUBSTR(STRIP(STATE_ID),1,4) = '1165' AND SUBSTR(STRIP(OLD_STATE_ID),1,4) =   '1170') OR 
          
(   SUBSTR(STRIP(STATE_ID),1,4) = '1160' AND SUBSTR(STRIP(OLD_STATE_ID),1,4) =   '1170')
        
THEN
          
DO;
          
SESSION_KEY   = SESSION +1;
        
SESSION   = SESSION_KEY;
        
END;
          
ELSE   
          
SESSION   = SESSION_KEY;
                    
IF   SUBSTR(STRIP(STATE_ID),1,4) IN ('1160','1170' '1150' ) AND FUNCTION_TYPE ='R'   
        
AND   LENGTH(STRIP(VALUE)) = 8
        
THEN
          
DOB_AUTHENTICATION   = 1 ;
        
ELSE
          
DOB_AUTHENTICATION   = 0;
                    
/*==============================================AUTHENTICATION======================================================================*/
        
/*ANI   AUTHENTICATION*/
              
IF   ( SUBSTR(STRIP(STATE_ID),1,4) = '1150' AND SUBSTR(STRIP(OLD_STATE_ID),1,4) =   '1125')  
        
THEN
          
ANI_AUTHENTICATION   = 1 ;
        
ELSE
          
ANI_AUTHENTICATION   = 0;
              
/*RX_AUTHENTICATION*/
        
IF   ( SUBSTR(STRIP(STATE_ID),1,4) = '1155'    AND SUBSTR(STRIP(OLD_STATE_ID),1,4) = '1135')  
        
THEN
          
RX_AUTHENTICATION   = 1 ;
        
ELSE
          
RX_AUTHENTICATION   = 0;
              
/*ALREADY   AUTHENTICATED*/
        
IF   ( SUBSTR(STRIP(STATE_ID),1,4) = '1155'    AND SUBSTR(STRIP(OLD_STATE_ID),1,4) = '1140')  
        
THEN
          
ALREADY_AUTHENTICATION   = 1 ;
        
ELSE
          
ALREADY_AUTHENTICATION   = 0;
              
/*SAME_NAME*/
        
IF   ( SUBSTR(STRIP(STATE_ID),1,4) = '1114')
        
THEN
          
SAME_NAME=   1 ;
        
ELSE
          
SAME_NAME=   0;
                    
/*SAME_ANI*/
        
IF   ( SUBSTR(STRIP(STATE_ID),1,4) = '1112')
        
THEN
          
SAME_ANI=   1;
        
ELSE
          
SAME_ANI=   0;
              
/*DOB   AUTHENTICATION*/
              
/*==============================================INITIATION======================================================================*/
              
/*RX_INITIATED*/
        
IF  SUBSTR(STRIP(STATE_ID),1,4) IN ( '1135')
        
THEN
          
RX_INITIATION   = 1 ;
        
ELSE
          
RX_INITIATION   = 0;
                    
/*ANI_INITIATIED*/
              
IF  SUBSTR(STRIP(STATE_ID),1,4) IN( '1125' )
        
THEN
          
ANI_INITIATION   = 1 ;
        
ELSE
          
ANI_INITIATION   = 0;
              
/*==============================================TRANSFER   AND HUNG UP======================================================================*/
              
/*TRANSFER*/
        
IF  SUBSTR(STRIP(STATE_ID),1,4) = '1560' AND   STRIP(FUNCTION_TYPE) = 'XC' AND STRIP(ATTRIBUTE) = 'CallVariable2'
        
THEN   TRANSFER = 1;
        
ELSE   TRANSFER =0;
              
IF    SUBSTR(STRIP(STATE_ID),1,4) = '1560'   AND STRIP(FUNCTION_TYPE) = 'XH'
        
THEN   HUNG_UP = 1;
        
ELSE   HUNG_UP =0;
                    
/*==============================================STATUS======================================================================*/
              
/*LIMITED   STATUS*/
        
IF  SUBSTR(STRIP(STATE_ID),1,4) = '1150'  AND SUBSTR(STRIP(OLD_STATE_ID),1,4) ='1125'
        
THEN   LTD_ANIDOB_STATUS = 1; /*THROUGH ANI */
        
ELSE   LTD_ANIDOB_STATUS =0; 
              
IF  SUBSTR(STRIP(STATE_ID),1,4) = '1155'  AND SUBSTR(STRIP(OLD_STATE_ID),1,4) =   '1135'
        
THEN   LTD_RX_STATUS = 1; /*THROUGH RX*/
        
ELSE   LTD_RX_STATUS =0; 
                    
IF  SUBSTR(STRIP(STATE_ID),1,4) = '1155'  AND SUBSTR(STRIP(OLD_STATE_ID),1,4) =   '1140'
        
THEN   LTD_SAMEANI_STATUS = 1; /*THROUGH SAME_ANI*/
        
ELSE   LTD_SAMEANI_STATUS =0; 
                    
/*DETAILED   STATUS*/
        
IF  SUBSTR(STRIP(STATE_ID),1,4) = '1165'  AND SUBSTR(STRIP(OLD_STATE_ID),1,4) =   '1150'
        
THEN   DET_ANI_STATUS = 1;
        
ELSE   DET_ANI_STATUS =0;
              
IF  SUBSTR(STRIP(STATE_ID),1,4) = '1165'  AND SUBSTR(STRIP(OLD_STATE_ID),1,4) =   '1170'
        
THEN   DET_RE_STATUS = 1;
        
ELSE   DET_RE_STATUS =0;
                    
IF  SUBSTR(STRIP(STATE_ID),1,4) = '1165'  AND SUBSTR(STRIP(OLD_STATE_ID),1,4) =   '1155'
        
THEN   DET_RX_STATUS = 1;
        
ELSE   DET_RX_STATUS =0;
              
IF  SUBSTR(STRIP(STATE_ID),1,4) = '1165'  AND SUBSTR(STRIP(OLD_STATE_ID),1,4) =   '1160'
        
THEN   DET_BD_STATUS = 1;
        
ELSE   DET_BD_STATUS =0;
              
/*================================================SUCCESS   AND NAVIGATION=====================================*/
              
/*OVERALL   SUCCESS*/
              
IF  SUBSTR(STRIP(STATE_ID),1,4) = '1150' OR
        
SUBSTR(STRIP(STATE_ID),1,4)   = '1155' OR
        
SUBSTR(STRIP(STATE_ID),1,4)   = '1165'
        
 
          
THEN   SUC_STATUS = 1; 
        
ELSE   SUC_STATUS =0; 
              
/*NAVIGATION*/
              
IF  SUBSTR(STRIP(STATE_ID),1,4) = '1040' AND   STRIP(OLD_STATE_ID) IN( '1165' ,'1150','1155')
        
THEN   IVR_NAVIGATION = 1; /*REACHING MAIN MENU FROM LTD OR DETAILED STATUS*/
        
ELSE   IVR_NAVIGATION = 0;
                    
/*INITIALIZING   THE NECESSARY */
        
IF   FIRST.CALL_ID THEN 
        
DO;
          
OLD_STATE_ID   = .;
        
DOUBLE_LAG   = .;
        
SESSION_KEY=0;
        
SESSION   = .;
        
END;
                
IF   substr(SUBSTR(STRIP(STATE_ID),1,4),1,2) = '11'  THEN STATUS = 1 ;  /* UNIQUE CALLS ATTEMPTING STATUS */
        
ELSE  STATUS = 0; 
        
RUN;
                
%END;
                
DATA   IVR.SAMPLE;
        
set   IVR.SAMPLE_APP1_2013_0&m._&i. IVR.SAMPLE_APP2_2013_0&m._&i.;
        
RUN;
                      
PROC   DATASETS LIBRARY=IVR;
        
DELETE   SAMPLE_APP2_2013_0&m._&i. SAMPLE_APP1_2013_0&m._&i.;
        
RUN;
                
PROC   SQL;
        
CREATE   TABLE IVR.SAMPLE AS
        
SELECT
          
CALL_DATE,CALL_ID,SESSION,
        
MAX(STATUS)   AS STATUS_ATTEMPT_FLAG,
        
MAX(RX_AUTHENTICATION)   AS RX_AUTHENTICATED,
        
MAX(ANI_AUTHENTICATION)   AS  ANIDOB_AUTHENTICATED,
        
MAX(ALREADY_AUTHENTICATION)   AS ALREADY_AUTHENTICATED,
        
MAX(DOB_AUTHENTICATION)   AS DOB_AUTHENTICATED,
              
MAX(HUNG_UP)   AS HUNG_UP , MAX(TRANSFER) AS TRANSFER,
              
MAX(LTD_RX_STATUS)   AS LTD_RX_STATUS,
        
MAX(LTD_ANIDOB_STATUS)   AS LTD_ANIDOB_STATUS,
        
MAX(LTD_SAMEANI_STATUS)   AS LTD_SAMEANI_STATUS,
              
MAX(DET_ANI_STATUS)   AS DET_ANI_STATUS,
        
MAX(DET_RX_STATUS)   AS DET_RX_STATUS,
        
MAX(DET_BD_STATUS)   AS DET_BD_STATUS,
        
MAX(DET_RE_STATUS)   AS DET_RE_STATUS,
              
MAX(RX_INITIATION)   AS RX_INITIATED,
        
MAX(ANI_INITIATION)   AS ANIDOB_INITIATED,
              
MAX(SAME_NAME)   AS SAME_NAME,
        
MAX(SAME_ANI)   AS SAME_ANI,
        
MAX(IVR_NAVIGATION)   AS IVR_NAVIGATION,
        
MAX(SUC_STATUS)   AS SUC_STATUS,
        
MIN(PUT(TIME_STAMP,DATETIME22.3))   AS START_TIME_STAMP, MAX(PUT(TIME_STAMP,DATETIME22.3)) AS END_TIME_STAMP,
        
MIN(TIME_STAMP)   AS START_TIME_STAMP1, MAX(TIME_STAMP) AS END_TIME_STAMP1
        
FROM   IVR.SAMPLE
        
WHERE   SESSION NE . AND SESSION NE 0
        
GROUP   BY 1,2,3;
        
QUIT;
                      
DATA   IVR.SAMPLE;
        
SET   IVR.SAMPLE;
        
SESSION_TIME_SPENT=   END_TIME_STAMP1-START_TIME_STAMP1;
        
RUN;
                
DATA   IVR.SAMPLE_HEADER;
        
SET   HEADER.HEADER_APP1_2012_0&m._&i.   HEADER.HEADER_APP2_2012_0&m._&i.;
        
START_TIME1   = START_DATE_TIME;
        
END_TIME1   = END_TIME;
        
CALL_TIME_SPENT   = END_TIME1 - START_TIME1;
        
RUN;
                
PROC   SQL;
        
CREATE   TABLE IVR.SAMPLE AS
        
SELECT  A.*, B.CALL_TIME_SPENT, B.ANI
        
FROM   IVR.SAMPLE AS A
        
INNER   JOIN 
        
IVR.SAMPLE_HEADER   AS  B
        
ON   A.CALL_ID = B.CALL_ID;
        
QUIT;
                      
/*ADDING   AUTHENTICATION INFO FOR DETAILED STATUS    - 2ND ATTEMPT*/
        
DATA   ivr.sample;
        
SET   IVR.SAMPLE;
        
IF   (DET_RE_STATUS = 1 OR DET_BD_STATUS = 1    )
        
 THEN 
          
DO;
          
ANIDOB_AUTHENTICATED   = 1 ;
        
ANIDOB_INITIATED   = 1;
        
END;
          
RUN;
                
PROC   SQL;
        
CREATE   TABLE IVR.FINAL_2013_0&m._&i. AS
        
SELECT   
          
CALL_DATE,
              
/*   EXTRA*/
        
SUM(DOB_AUTHENTICATED)   AS DOB_AUTHENTICATED,
        
COUNT(DISTINCT   CALL_ID) AS STATUS_CALLS,
        
COUNT(DISTINCT   CASE WHEN (HUNG_UP = 1 OR TRANSFER = 1) AND (RX_INITIATED = 1 OR   ANIDOB_INITIATED = 1 OR ALREADY_AUTHENTICATED = 1 ) THEN CALL_ID END) AS   STATUS_INITIATED,
        
COUNT(DISTINCT   CASE WHEN (RX_INITIATED = 1 OR ANIDOB_INITIATED = 1 OR ALREADY_AUTHENTICATED   = 1 ) THEN STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.))END   ) AS STATUS_TRANS,
        
COUNT(DISTINCT   STRIP(ANI)) AS UNIQUE_CALLERS,
        
/*SAME   ANI*/
        
COUNT(DISTINCT   CASE WHEN  SAME_ANI =1
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END) AS   SAME_ANI,
        
/*SAME   NAME*/
        
COUNT(DISTINCT   CASE WHEN  SAME_NAME =1
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END) AS   SAME_NAME,
              
/*#   AUTHENTICATED CALLS*/
        
COUNT(DISTINCT   CASE WHEN RX_AUTHENTICATED = 1 OR ANIDOB_AUTHENTICATED = 1 OR   ALREADY_AUTHENTICATED =1
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END) AS   AUTHENTICATED,
                    
/*ALREADY   AUTHENTICATED*/
        
COUNT(DISTINCT   CASE WHEN ALREADY_AUTHENTICATED = 1 
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END) AS   ALREADY_AUTHENTICATED,
              
/*RX   AUTHENTICATION*/
        
COUNT(DISTINCT   CASE WHEN RX_INITIATED = 1  THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END) AS   RX_INITIATED,
        
COUNT(DISTINCT   CASE WHEN RX_INITIATED = 1 AND RX_AUTHENTICATED = 1  THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END) AS   RX_AUTHENTICATED,
              
COUNT(DISTINCT   CASE WHEN RX_INITIATED = 1 AND RX_AUTHENTICATED = 0 AND 
        
ALREADY_AUTHENTICATED   = 0 AND TRANSFER = 1  THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END) AS   TRANSFER_PRIOR_TO_RXAUTH,
        
COUNT(DISTINCT   CASE WHEN RX_INITIATED = 1 AND    RX_AUTHENTICATED =0 AND ALREADY_AUTHENTICATED = 0  AND HUNG_UP = 1  THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END ) AS   ABANDON_PRIOR_TO_RXAUTH,
                    
/*ANIDOB   AUTHENTICATION*/
        
COUNT(DISTINCT   CASE WHEN ANIDOB_INITIATED = 1  THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END ) AS   ANIDOB_INITIATED,
        
COUNT(DISTINCT   CASE WHEN ANIDOB_INITIATED = 1 AND ANIDOB_AUTHENTICATED = 1  THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END ) AS   ANIDOB_AUTHENTICATED,
        
COUNT(DISTINCT   CASE WHEN ANIDOB_INITIATED = 1 AND    ANIDOB_AUTHENTICATED = 0 AND 
        
ALREADY_AUTHENTICATED   = 0 AND  TRANSFER = 1  THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END ) AS   TRANSFER_PRIOR_TO_ANIDOBAUTH,
        
COUNT(DISTINCT   CASE WHEN ANIDOB_INITIATED = 1 AND    ANIDOB_AUTHENTICATED = 0 AND ALREADY_AUTHENTICATED = 0 
        
AND   HUNG_UP = 1  THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.))END ) AS   ABANDON_PRIOR_TO_ANIDOBAUTH,
                    
/*LIMITED   RX STATUS*/
        
COUNT(DISTINCT   CASE WHEN (LTD_RX_STATUS = 1 OR LTD_ANIDOB_STATUS =1 OR ALREADY_AUTHENTICATED   =1) AND 
        
(RX_INITIATED   =1 OR ALREADY_AUTHENTICATED =1 OR ANIDOB_INITIATED =1)
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END ) AS   LTD_ATTEMPTS,
              
COUNT(DISTINCT   CASE WHEN (LTD_RX_STATUS = 1  OR   ALREADY_AUTHENTICATED=1) AND 
        
(RX_INITIATED   =1 OR ALREADY_AUTHENTICATED =1)
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END ) AS   LTD_RX_ATTEMPTS,
              
COUNT(DISTINCT   CASE WHEN (LTD_RX_STATUS = 1  OR   ALREADY_AUTHENTICATED = 1)  AND   IVR_NAVIGATION =1 AND (RX_INITIATED =1 OR ALREADY_AUTHENTICATED =1)
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END ) AS   LTD_IVRNAVRX_ATTEMPTS,
              
COUNT(DISTINCT   CASE WHEN (LTD_RX_STATUS = 1  OR   ALREADY_AUTHENTICATED=1) AND 
        
(DET_RX_STATUS   = 0 AND DET_ANI_STATUS = 0 AND DET_BD_STATUS = 0  AND DET_RE_STATUS =0 ) AND 
        
HUNG_UP   =
      
1   AND (RX_INITIATED =1 OR ALREADY_AUTHENTICATED =1)
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END ) AS   LTD_RX_HUNG_UP,
              
COUNT(DISTINCT   CASE WHEN (LTD_RX_STATUS = 1  OR   ALREADY_AUTHENTICATED=1 )AND TRANSFER =
      
1
        
AND   (RX_INITIATED =1 OR ALREADY_AUTHENTICATED =1)
        
 AND (DET_RX_STATUS = 0 AND DET_ANI_STATUS =   0 AND DET_BD_STATUS = 0  AND   DET_RE_STATUS =0 )
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END ) AS   LTD_RX_TRANSFER,
                          
/*LIMITED   ANI STATUS*/
        
COUNT(DISTINCT   CASE WHEN LTD_ANIDOB_STATUS=1 AND ANIDOB_INITIATED =1
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END ) AS   LTD_ANIDOB_ATTEMPTS,
              
COUNT(DISTINCT   CASE WHEN LTD_ANIDOB_STATUS=1  AND   IVR_NAVIGATION =1 AND ANIDOB_INITIATED =1
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END ) AS   LTD_IVRNAVANI_ATTEMPTS,
              
COUNT(DISTINCT   CASE WHEN LTD_ANIDOB_STATUS=1 AND HUNG_UP =1
        
AND   ANIDOB_INITIATED =1
        
AND   (DET_RX_STATUS = 0 AND DET_ANI_STATUS = 0 AND DET_BD_STATUS = 0 AND   DET_RE_STATUS =0)
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END ) AS   LTD_ANIDOB_HUNG_UP,
              
COUNT(DISTINCT   CASE WHEN LTD_ANIDOB_STATUS=1 AND TRANSFER =1
        
AND   ANIDOB_INITIATED =1
        
AND   (DET_RX_STATUS = 0 AND DET_ANI_STATUS = 0 AND DET_BD_STATUS = 0 AND   DET_RE_STATUS =0 )
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END ) AS   LTD_ANIDOB_TRANSFER,
                    
/*DETAILED   RX STATUS*/
        
COUNT(DISTINCT   CASE WHEN (DET_RX_STATUS = 1 OR DET_ANI_STATUS = 1 OR DET_BD_STATUS = 1 OR   DET_RE_STATUS =1) 
        
AND   (RX_INITIATED =1 OR ANIDOB_AUTHENTICATED =1 OR ALREADY_AUTHENTICATED =1)
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END ) AS   DET_ATTEMPTS,
              
COUNT(DISTINCT   CASE WHEN DET_RX_STATUS = 1  AND   (RX_INITIATED =1 OR ALREADY_AUTHENTICATED =1)
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END ) AS   DET_RX_ATTEMPTS,
              
COUNT(DISTINCT   CASE WHEN (DET_RX_STATUS = 1 ) AND IVR_NAVIGATION =1 AND (RX_INITIATED   =1  OR ALREADY_AUTHENTICATED =1 )
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END ) AS   DET_IVRNAVRX_ATTEMPTS,
                    
COUNT(DISTINCT   CASE WHEN (DET_RX_STATUS = 1)   AND   HUNG_UP =
      
1   AND (RX_INITIATED =1 OR ALREADY_AUTHENTICATED =1)
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END ) AS   DET_RX_HUNG_UP,
              
COUNT(DISTINCT   CASE WHEN DET_RX_STATUS = 1  AND   TRANSFER =
      
1  AND (RX_INITIATED =1 OR   ALREADY_AUTHENTICATED =1)
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END ) AS   DET_RX_TRANSFER,
                          
COUNT(DISTINCT   CASE WHEN (DET_ANI_STATUS = 1 OR DET_BD_STATUS = 1 OR DET_RE_STATUS =1 ) AND   (ANIDOB_INITIATED =1 )
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END ) AS   DET_ANIDOB_ATTEMPTS,
                    
COUNT(DISTINCT   CASE WHEN (DET_ANI_STATUS = 1 OR DET_BD_STATUS = 1 OR  DET_RE_STATUS = 1) AND IVR_NAVIGATION =1   AND (ANIDOB_INITIATED =1 )
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END ) AS   DET_IVRNAVANI_ATTEMPTS,
              
COUNT(DISTINCT   CASE WHEN (DET_ANI_STATUS = 1 OR DET_BD_STATUS = 1 OR  DET_RE_STATUS = 1 )  AND HUNG_UP =1 
        
AND   (ANIDOB_INITIATED =1 )
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END ) AS DET_ANIDOB_HUNG_UP,
              
COUNT(DISTINCT   CASE WHEN (DET_ANI_STATUS = 1 OR DET_BD_STATUS = 1 OR  DET_RE_STATUS = 1) AND 
        
TRANSFER   =1 AND (ANIDOB_INITIATED =1 )
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END ) AS   DET_ANIDOB_TRANSFER,
        
 
                
/*ABANDONED   CALL SUMMARY*/
        
COUNT(DISTINCT   CASE WHEN  HUNG_UP = 1 AND SUC_STATUS =   0 AND (RX_INITIATED = 1 OR ANIDOB_INITIATED = 1 OR ALREADY_AUTHENTICATED = 1)
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.))END) AS   TOTAL_ABANDONED,
              
COUNT(DISTINCT   CASE WHEN ( (RX_INITIATED = 1 OR ANIDOB_INITIATED = 1) AND   ANIDOB_AUTHENTICATED = 0 AND    RX_AUTHENTICATED = 0 AND ALREADY_AUTHENTICATED = 0)  
        
AND   HUNG_UP = 1 AND SUC_STATUS = 0 
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END) AS   TOTAL_ABANDONED_BFR_AUTH,
              
COUNT(DISTINCT   CASE WHEN ( (RX_INITIATED = 1 OR ANIDOB_INITIATED = 1 OR   ALREADY_AUTHENTICATED =1) AND ANIDOB_AUTHENTICATED = 1 OR  RX_AUTHENTICATED = 1 OR   ALREADY_AUTHENTICATED =1 ) AND SUC_STATUS =0
        
AND   (DET_RX_STATUS =0 AND DET_RE_STATUS=0 AND DET_ANI_STATUS = 0 AND   DET_BD_STATUS = 0 )AND HUNG_UP = 1
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.))END) AS   TOTAL_ABANDONED_AFTR_AUTH,
                                
/*TRANSFER   CALL SUMMARY*/
        
COUNT(DISTINCT   CASE WHEN   TRANSFER = 1  AND (RX_INITIATED = 1 OR ANIDOB_INITIATED =   1 OR ALREADY_AUTHENTICATED =1)
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.))END) AS   TOTAL_TRANSFER,
              
COUNT(DISTINCT   CASE WHEN (ANIDOB_AUTHENTICATED = 0 AND    RX_AUTHENTICATED = 0 AND ALREADY_AUTHENTICATED =0)   
        
AND   (RX_INITIATED = 1 OR ANIDOB_INITIATED = 1) 
        
AND   TRANSFER = 1 
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.)) END) AS   TOTAL_TRANSFER_BFR_AUTH,
              
COUNT(DISTINCT   CASE WHEN (ANIDOB_AUTHENTICATED = 1 OR    RX_AUTHENTICATED = 1 OR ALREADY_AUTHENTICATED =1)AND 
        
(DET_RX_STATUS   = 0 AND DET_ANI_STATUS = 0 AND DET_BD_STATUS = 0 AND DET_RE_STATUS =0 ) AND   TRANSFER = 1 AND (RX_INITIATED = 1 OR ANIDOB_INITIATED = 1  OR ALREADY_AUTHENTICATED =1 )
        
 
          
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.))END) AS   TOTAL_TRANSFER_BFR_DETSTATUS,
              
COUNT(DISTINCT   CASE WHEN 
        
(   DET_RX_STATUS = 1 OR DET_ANI_STATUS = 1 OR DET_BD_STATUS = 1 OR   DET_RE_STATUS=1) 
        
AND   (RX_INITIATED = 1 OR ANIDOB_INITIATED = 1    OR ALREADY_AUTHENTICATED =1 )
        
AND   TRANSFER = 1
        
THEN   STRIP(PUT(CALL_ID,20.))||"A"||STRIP(PUT(SESSION,5.))END) AS   TOTAL_TRANSFER_AFTR_DETSTATUS
                          
FROM   
          
ivr.sample
        
GROUP   BY 1;
        
QUIT;   
                            
PROC   SQL;
        
CREATE   TABLE IVR.CALL_LEVEL AS
        
SELECT   CALL_DATE,CALL_ID, 
        
SUM(SUC_STATUS)   AS SUC_STATUS, MAX(HUNG_UP) AS HUNG_UP,
        
MAX(TRANSFER)   AS TRANSFER, 
        
MAX(CALL_TIME_SPENT)   AS CALL_AHT,
        
AVG(SESSION_TIME_SPENT)   AS AVG_TRANS_AHT
        
FROM   
          
ivr.sample
        
GROUP   BY 1,2;
        
QUIT;
                      
/*PULLING   THE DATA AT A DAY ELLVEL FOR THE AGGREGATE - STATUS TAB*/
        
PROC   SQL;
        
CREATE   TABLE IVR.AGGREGATE_2013_0&m._&i. AS
        
SELECT   A.*, B.* FROM
        
(
          
SELECT   1 as app, CALL_DATE,
              
/*PULLING   THE DATA AT A DAY ELVEL FOR THE AGGREGATE - STATUS TAB*/
        
COUNT(DISTINCT   CASE WHEN SUC_STATUS > 0 AND (HUNG_UP = 1 OR TRANSFER = 1) THEN CALL_ID   END) AS SUCCESSFUL_REFILL_CALLS,
        
AVG(CASE   WHEN SUC_STATUS > 0 THEN SESSION_TIME_SPENT END ) AS AVG_STATUS_TRANS_AHT,
        
COUNT(DISTINCT   CASE WHEN SUC_STATUS > 0  AND   HUNG_UP = 1 THEN CALL_ID END ) AS DEFLECTED_CALLS,
        
AVG(CASE   WHEN SUC_STATUS > 0  AND HUNG_UP = 1   THEN SESSION_TIME_SPENT END )AS DEFLECTED_TRANS_AHT,
        
COUNT(DISTINCT   CASE WHEN SUC_STATUS > 0  AND TRANSFER   = 1 THEN CALL_ID END ) AS REFILL_TRANS_CALLS,
        
AVG(CASE   WHEN SUC_STATUS > 0  AND TRANSFER =   1 THEN SESSION_TIME_SPENT END )AS REFILL_TRANS_AHT
        
FROM   ivr.sample
        
GROUP   BY 1,2
        
)   AS A 
          
LEFT   JOIN 
        
(
          
SELECT   1 as app,CALL_DATE,
        
AVG(CASE   WHEN SUC_STATUS > 0 THEN CALL_AHT    end) AS AVG_REFILL_CALL_AHT,
        
AVG(CASE   WHEN SUC_STATUS > 0  AND HUNG_UP = 1   THEN CALL_AHT END )AS AVG_DEFLECTED_CALL_AHT,
        
AVG(CASE   WHEN SUC_STATUS > 0  AND TRANSFER =   1 THEN CALL_AHT END )AS AVG_TRANSFER_CALL_AHT
        
FROM  IVR.CALL_LEVEL
        
GROUP   BY 1,2
              
)   AS B
          
ON   A.APP = B.APP;
        
QUIT;
                      
%END;
          
%END;
          
%MEND;
                
%IVR_STATUS_BPR(31);